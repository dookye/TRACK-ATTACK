/* Globale Entfernung des Tap-Highlights und der Outline */
* {
    -webkit-tap-highlight-color: transparent; /* Für WebKit-Browser (iOS Safari, Android Chrome) */
    outline: none; /* Entfernt den Fokus-Rahmen */
}

/* Optional: Spezifisch für Buttons, falls das globale * nicht ausreicht oder unerwünschte Nebeneffekte hat */
button, .genre-button, .dice-option, #login-button, #logo-button, #reveal-button {
    -webkit-tap-highlight-color: transparent;
    outline: none;
}

/* Genereller Stil für interaktive Buttons für den Pulldown-Effekt */
/* Betrifft AUFLÖSEN, RICHTIG, FALSCH und alle GENRE-BUTTONS */

/* WICHTIG: Füge eine Transition hinzu, damit die Skalierung weich erfolgt */
/* Dies kannst du entweder global für alle Buttons oder spezifisch tun */

/* Beispiel für alle Buttons, die diesen Effekt haben sollen */
.genre-button,
#reveal-button, /* AUFLÖSEN-Button */
#correct-button, /* RICHTIG-Button */
#wrong-button, /* FALSCH-Button */
.dice-option /* Die Würfel-Bilder, wenn sie auch einen Click-Effekt haben sollen */
{
    transition: transform 0.06s ease-out; /* Kurze, sanfte Animation */
    cursor: pointer; /* Zeigt an, dass das Element klickbar ist */
}

/* Der eigentliche Pulldown-Effekt beim Klicken */
.genre-button:active,
#reveal-button:active,
#correct-button:active,
#wrong-button:active,
.dice-option:active
{
    transform: scale(0.95); /* Macht den Button 5% kleiner beim Klicken */
}

/* Grundlegende Stile & Variablen */
:root {
    --player1-color: #007bff; /* Blau */
    --player2-color: #e83e8c; /* Pink */
    --punktefarbe-player1: #fff; /* weiss */
    --punktefarbe-player2: #fff; /* weiss */
    --black: #000;
    --white: #fff;
    --transition-speed: 0.8s;
}

/* Phase 1.1: Body & Seiten-Setup */
body, html {
    margin: 0;
    padding: 0;
    width: 100%;
    height: 100%;
    overflow: hidden;
    font-family: Arial, Helvetica, sans-serif;
    background-color: var(--black);
    color: var(--white);
    display: flex;
    justify-content: center;
    align-items: center;
    text-align: center;
    -webkit-touch-callout: none; /* iOS Safari */
    -webkit-user-select: none;    /* Safari */
    -khtml-user-select: none;     /* Konqueror HTML */
    -moz-user-select: none;       /* Old versions of Firefox */
    -ms-user-select: none;        /* Internet Explorer/Edge */
    user-select: none;            /* Non-prefixed version, currently supported by Chrome, Edge, Opera and Firefox */

    -webkit-user-drag: none; /* Spezifisch für WebKit (Chrome, Safari, Edge auf iOS) */
    -moz-user-drag: none;    /* Für Firefox */
    user-drag: none;         /* Standard */

    touch-action: pan-x pan-y; /* Erlaubt Panning/Scrolling. Auf 'none' setzen, um alles zu blockieren. */
    /* Alternative für touch-action: */
    /* touch-action: none; */ /* Blockiert ALLE Touch-Gesten (Panning, Zoom, etc.). SEHR VORSICHTIG ANWENDEN! */
}

#app-container {
    width: 100%;
    height: 100%;
    position: relative;
    overflow: hidden;
    transition: background-color var(--transition-speed) ease-in-out;
}

.screen {
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    position: absolute;
    top: 0;
    left: 0;
}

#login-screen {
    /* Deine bestehenden Styles, z.B. */
    display: flex;
    flex-direction: column; /* Wichtig, damit die Elemente untereinander stehen */
    justify-content: center; /* center Zentriert vertikal, wenn genug Platz ist */
    align-items: center; /* Zentriert horizontal */
    text-align: center;
    padding: 20px; /* Füge etwas Polsterung hinzu */
    box-sizing: border-box; /* Stellt sicher, dass Padding zur Größe beiträgt */

    /* Die wichtigen neuen Eigenschaften für Scrollbarkeit: */
    height: 100vh; /* (100vh Nimmt die volle Viewport-Höhe ein) */
    overflow-y: auto; /* Ermöglicht vertikales Scrollen, wenn Inhalt die Höhe übersteigt */
    -webkit-overflow-scrolling: touch; /* Verbessert das Scroll-Verhalten auf iOS */
}

.hidden {
    display: none !important;
}

/* Overlay für Hochformat & Vollbild */
.overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background: var(--black);
    z-index: 9999;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 1.5em;
}

/* Stil für das Logo auf dem Login-Screen */
#login-logo {
    width: 250px; /* Passe die Breite an deine Bedürfnisse an */
    height: auto;
    margin-bottom: 10px; /* Abstand zum Text darunter */
}

.info-button {
    display: inline-block; /* Ermöglicht Padding und Margin */
    margin-top: 20px; /* Abstand nach oben */
    cursor: pointer;
    transition: transform 0.2s ease; /* Kleine Animation beim Hover */
}

.info-button:hover {
    transform: scale(1.05); /* Beim Hover leicht größer werden */
}

.info-button img {
    width: 50px; /* Größe deines Info-Icons, anpassen */
    height: 50px;
    display: block; /* Entfernt zusätzlichen Platz unter dem Bild */
    margin-bottom: 20px;
}

/* Login-Button (Phase 1.1) */
#login-button {
    background-color: #1DB954;
    color: var(--white);
    border: none;
    padding: 15px 30px;
    border-radius: 50px;
    font-size: 1em;
    font-weight: bold;
    cursor: pointer;
    display: flex;
    align-items: center;
    gap: 15px;
    margin-top: 20px;
}
#login-button img {
    height: 24px;
}

/* Logo-Button & Animationen (Phase 1.4 & 2.1) */
#logo-button {
    width: 200px;
    height: auto;
    cursor: pointer;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 110;
}

.initial-fly-in {
    animation: fly-in 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards,
                bounce-end 0.3s 0.6s ease-out forwards;
}

@keyframes fly-in {
    0% {
        /* Start: Groß und unsichtbar */
        transform: translate(-50%, -50%) scale(12);
        opacity: 0;
    }
    100% {
        /* Ende: Normale Größe und sichtbar */
        transform: translate(-50%, -50%) scale(1);
        opacity: 1;
    }
}

.bounce {
    animation: bounce 0.3s ease;
}

@keyframes bounce {
    0%, 100% { transform: translate(-50%, -50%) scale(1); }
    50% { transform: translate(-50%, -50%) scale(1.1); }
}

@keyframes bounce-end {
    0%, 100% { transform: translate(-50%, -50%) scale(1); }
    50% { transform: translate(-50%, -50%) scale(1.1); }
}

#logo-button.inactive {
    filter: blur(5px);
    pointer-events: none;
}

/* Würfel Container */
#dice-container {
    display: flex;
    justify-content: center;
    align-items: center;
    /* gap: 20px; */
}

/* Würfel Auswahl (Die Würfel-Buttons selbst) */
#dice-selection {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 30px; /* ändert den Abstand zwischen den Würfeln */
}

#dice-selection img:active {
    transform: scale(0.95); /* Wird kleiner beim Klicken */
}

.dice-option {
    width: 100px;
    height: auto;
    cursor: pointer;
    transition: transform 0.1s;
}

#dice-animation {
    width: 250px;
}

.dice-option:hover {
    transform: scale(1.1);
}

#genre-container {
    display: flex;
    flex-wrap: wrap; /* Wichtig, damit die Buttons in die nächste Zeile umbrechen */
    justify-content: center;
    align-items: center;
    gap: 15px; /* Abstand zwischen den Buttons */
    padding: 20px;
    
    /* --- NEU/AKTUALISIERT: Für den scrollbaren Bereich --- */
    max-height: 95vh; /* Maximale Höhe: 70% der Viewport-Höhe. 
                         Du kannst diesen Wert anpassen (z.B. 60vh, 500px), 
                         je nachdem, wie viel Platz du für andere Elemente lassen möchtest. */
    overflow-y: auto; /* Erlaubt vertikales Scrollen, wenn der Inhalt die max-height überschreitet */
    -webkit-overflow-scrolling: touch; /* Verbessert das Scroll-Verhalten auf iOS-Geräten */
    
    /* Optional: Scrollbar verstecken für einen saubereren Look */
    scrollbar-width: none; /* Für Firefox */
    -ms-overflow-style: none; /* Für Internet Explorer und Edge */
}

/* Optional: Für Webkit-Browser (Chrome, Safari) die Scrollbar verstecken */
#genre-container::-webkit-scrollbar {
    display: none;
}

/* Optional: Stil für einzelne Genre-Buttons */
.genre-button {
    /* Sicherstellen, dass die Buttons nicht zu klein werden, 
       wenn viele da sind und flex-wrap aktiv ist */
    flex-shrink: 0; 
    min-width: 120px; /* Beispiel: Mindestbreite für jeden Button */
    padding: 20px 30px;
    font-size: 1.2em;
    cursor: pointer;
    border: 2px solid var(--white);
    background: transparent;
    color: var(--white);
    transition: background-color 0.3s, color 0.3s;
    border-radius: 10px;
}

.genre-button:hover:not(:disabled) {
    transform: scale(1.03);
    background-color: var(--white);
    color: var(--black);
}
.genre-button:disabled {
    opacity: 0.5;
    cursor: not-allowed;
}

/* NEU: Klasse zur Deaktivierung der Buttons während der Animation */
.no-interaction {
    pointer-events: none; /* Verhindert alle Maus- und Klick-Events */
    opacity: 0.8;
    cursor: default;       /* Stellt sicher, dass der Cursor nicht auf "Pointer" wechselt */
}

.random-blink {
    animation: blink 0.2s infinite;
}

@keyframes blink {
    0%, 100% { opacity: 1; }
    50% { opacity: 0.5; }
}

/* Rate-Bildschirm & Auflösung (Phase 4) */
#reveal-button {
    position: absolute;
    bottom: 5%;
    padding: 15px 40px;
    font-size: 1.3em;
    background-color: #1DB954;
    color: white;
    border: none;
    border-radius: 50px;
    cursor: pointer;
}

#reveal-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 30px;
}

#track-info {
    display: flex;
    align-items: center;
    gap: 20px;
    background: rgba(0,0,0,0.5);
    padding: 20px;
    border-radius: 10px;
}
#album-cover {
    width: 150px;
    height: 150px;
}
#track-title {
    font-size: 2em;
    font-weight: bold;
    margin: 0;
}
#track-artist {
    font-size: 1.2em;
    margin: 0;
}

/* Styling für Album und Jahr */
#track-album {
    font-size: 1em; /* Etwas kleiner als Titel und Interpret */
    margin-top: 5px; /* Abstand zum Interpreten */
    color: #bbb; /* Leicht gräuliche Farbe */
}

#track-year {
    font-size: 0.9em; /* Noch kleiner */
    color: #999; /* Noch gräulicher */
}

#feedback-buttons button {
    padding: 15px 30px;
    font-size: 1.2em;
    margin: 0 10px;
    border-radius: 30px;
    border: none;
    cursor: pointer;
    min-width: 150px;
}
#correct-button { background-color: #28a745; color: white; }
#wrong-button { background-color: #dc3545; color: white; }

/* Punkte-Bildschirm (Phase 5) */
#score-screen {
    flex-direction: row;
    background: linear-gradient(90deg, var(--player1-color) 0%, var(--player1-color) 45%, var(--player2-color) 55%, var(--player2-color) 100%);
}
#player1-score-display, #player2-score-display {
    width: 50%;
    font-size: 15vw;
    font-weight: bold;
    color: white;
    text-shadow: 2px 2px 10px rgba(0,0,0,0.5);
    opacity: 1;
    transition: opacity 1s ease-in-out;
}

/* Speed-Round (Phase 6) */
/* NEU: Styling für das Wort "SPEED-ROUND" */
#speed-round-text-display {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size: 10vw; /* Beispiel: Deutlich größer als normal, aber kleiner als 20vw */
    font-weight: bold;
    color: var(--white);
    text-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
    z-index: 20; /* Liegt unter dem Countdown, aber über dem Spielbildschirm */
    animation: zoom-fade-in 4s forwards; /* Die Animation bleibt hier */
    white-space: nowrap; /* Verhindert Zeilenumbruch bei langen Texten */
}

/* --- Media Query für mobile Geräte --- */
/* Dies wird auf Bildschirmen mit einer Breite von 768px oder weniger angewendet */
@media screen and (max-width: 768px) {
    #speed-round-text-display {
        font-size: 10vw; /* Anpassung für Handys, verringert die Schriftgröße */
        line-height: 1.2; /* Sorgt dafür, dass der Text eng beieinander steht, falls er umbricht */
        padding: 0 10px; /* Fügt links und rechts etwas Platz hinzu */
        box-sizing: border-box; /* Stellt sicher, dass das Padding die Gesamtbreite nicht erhöht */
    }
}

/* Countdown-Anzeige (bleibt so groß und animiert) */
#countdown-display {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size: 20vw; /* Sehr groß und responsiv */
    font-weight: bold;
    color: var(--white);
    text-shadow: 0 0 20px rgba(0, 0, 0, 0.5); /* Leichter Glow */
    z-index: 120; /* Über den meisten anderen Elementen */
    /* Animation wird über JavaScript hinzugefügt/entfernt, damit sie jedes Mal neu startet */
}

@media screen and (max-width: 768px) {
    #countdown-display {
        font-size: 18vw; /* Sehr groß und responsiv */
    }
}

/* Klasse für die Animation, die wir per JS hinzufügen und entfernen */
.countdown-animated {
    animation: countdown-pulse 1s ease-in-out forwards;
}

/* Angepasste Keyframes für den Countdown-Puls */
@keyframes countdown-pulse {
    0% { transform: translate(-50%, -50%) scale(0.8); opacity: 0; }
    20% { transform: translate(-50%, -50%) scale(1.2); opacity: 1; } /* Kurz größer werden und sichtbar */
    80% { transform: translate(-50%, -50%) scale(1); opacity: 1; }
    100% { transform: translate(-50%, -50%) scale(1); opacity: 0; } /* Wieder kleiner werden und ausblenden */
}

@keyframes zoom-fade-in {
    0% { transform: translate(-50%, -50%) scale(0.5); opacity: 0; }
    20% { transform: translate(-50%, -50%) scale(1.1); opacity: 1; }
    80% { transform: translate(-50%, -50%) scale(1); opacity: 1; }
    100% { transform: translate(-50%, -50%) scale(1); opacity: 0; }
}

@keyframes points-fade-in-zoom {
  0% {
    opacity: 0;
    transform: translate(-50%, -50%) scale(0.5); /* Start kleiner und transparent */
  }
  20% {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1.2); /* Endet normal groß und sichtbar */
  }
  100% {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1); /* Endet normal groß und sichtbar */
  }
}

.points-pop-in {
  animation: points-fade-in-zoom 1s ease-out forwards; /* Schnelle 0.3 Sekunden Einblendung */
}

@keyframes flyToCornerPlayer1 {
  0% {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1); /* Startposition (Mitte linke Hälfte) */
    top: 50%;
    left: 50%; /* 25 für linke hälfte */
  }
  100% {
    opacity: 0;
    transform: translate(-50%, -50%) scale(0.2); /* Wird kleiner */
    top: 50%; /* bleibt mittig */
    left: 1%; /* Fliegt nach links oben */
  }
}

@keyframes flyToCornerPlayer2 {
  0% {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1); /* Startposition (Mitte rechte Hälfte) */
    top: 50%;
    left: 50%; /* 75 für rechte hälfte */
  }
  100% {
    opacity: 0;
    transform: translate(-50%, -50%) scale(0.2); /* Wird kleiner */
    top: 50%; /* bleibt mittig */
    left: 99%; /* Fliegt nach rechts oben */
  }
}

.fly-up-player1 {
  animation: flyToCornerPlayer1 0.4s ease-in forwards; /* 0.7 Sekunden Dauer, bleibt am Ende */
}

.fly-down-player2 {
  animation: flyToCornerPlayer2 0.4s ease-in forwards; /* 0.7 Sekunden Dauer, bleibt am Ende */
}

/* Container für den digitalen Würfel */
#digital-dice-area {
    position: absolute; /* Absolute Positionierung im dice-container */
    bottom: 20px;       /* 20px Abstand vom unteren Rand */
    left: 20px;         /* 20px Abstand vom linken Rand */
    display: flex;      /* Um das einzelne Bild zu zentrieren oder einfach zu enthalten */
    align-items: center; /* Vertikal zentrieren */
    justify-content: center; /* Horizontal zentrieren */
    /* z-index: 50;        - Sicherstellen, dass es über anderen Elementen liegt */
}

/* Styling für das einzige Bild-Element (egal ob Startbild, Animation oder Ergebnis) */
.digital-dice-icon {
    width: 50px;        /* Etwas größere und einheitliche Größe für alle Zustände */
    height: 50px;
    cursor: pointer;    /* Zeigt an, dass das Element klickbar ist (solange es kein GIF ist) */
    border-radius: 10px; /* Leicht abgerundete Ecken */
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3); /* Leichter Schatten */
    transition: transform 0.2s ease, opacity 0.2s ease; /* Sanfte Übergänge */
}

.digital-dice-icon:hover {
    transform: scale(1.05); /* Beim Hover leicht vergrößern */
    opacity: 0.9;
}

/* Optional: Animation für den Button während des Würfelns (wenn es der digi-ani.gif ist) */
/* Diese Klasse wird dynamisch hinzugefügt/entfernt, obwohl das GIF selbst animiert ist */
/* Es könnte für einen visuellen Effekt um das GIF herum nützlich sein. */
.digital-dice-icon.rolling {
    animation: pulse-border 1s infinite alternate; /* Fügt einen pulsierenden Rahmen hinzu */
}

@keyframes pulse-border {
    from {
        box-shadow: 0 0 0 0 rgba(255, 255, 255, 0.4);
    }
    to {
        box-shadow: 0 0 0 8px rgba(255, 255, 255, 0);
    }
}

/* ------------- Genre-Startauswahl ------------------ */
/* --- NEU: Basis-Stile für den Start-Genre-Container --- */
#start-genre-selection-container {
    display: flex;
    flex-wrap: wrap; /* Wichtig, damit die Buttons in die nächste Zeile umbrechen */
    justify-content: center;
    align-items: center;
    gap: 15px; /* Abstand zwischen den Buttons */
    padding: 20px;
    
    /* --- NEU/AKTUALISIERT: Für den scrollbaren Bereich --- */
    max-height: 95vh; /* Maximale Höhe: 70% der Viewport-Höhe. 
                         Du kannst diesen Wert anpassen (z.B. 60vh, 500px), 
                         je nachdem, wie viel Platz du für andere Elemente lassen möchtest. */
    overflow-y: auto; /* Erlaubt vertikales Scrollen, wenn der Inhalt die max-height überschreitet */
    -webkit-overflow-scrolling: touch; /* Verbessert das Scroll-Verhalten auf iOS-Geräten */
    
    /* Optional: Scrollbar verstecken für einen saubereren Look */
    scrollbar-width: none; /* Für Firefox */
    -ms-overflow-style: none; /* Für Internet Explorer und Edge */
}

/* Für Webkit-Browser (Chrome, Safari) Scrollbar verstecken */
#start-genre-selection-container::-webkit-scrollbar {
    display: none;
}

/* --- NEU: Stile für die Genre-Buttons in der Vorauswahl --- */
.preselect-genre-button {
    background-color: var(--black); /* Hintergrundfarbe für "unausgewählt" */
    margin-bottom: 30px; /* Abstand zwischen den Buttons */
    transition: all 0.2s ease-in-out; /* Übergänge für visuelles Feedback */
    width: 90%; /* Volle Breite im Container */
    padding: 20px 30px;
    text-align: center;
    flex-shrink: 0; 
    font-size: 1.2em;
    cursor: pointer;
    border: 2px solid var(--white);
    background: transparent;
    color: var(--white);
    transition: background-color 0.3s, color 0.3s;
    border-radius: 10px;
}

.preselect-genre-button:hover {
    transform: scale(1.03);
    background-color: var(--white);
    color: var(--black);
}

/* Stil für ausgewählte Genre-Buttons */
.preselect-genre-button.selected {
    background-color: var(--white); /* Beispiel: Player1-Farbe für "ausgewählt" */
    border-color: var(--black);
    color: var(--black);
}

/* Optional: Titel für die Sektion */
#start-genre-selection-container h3 {
    color: var(--white);
    margin-bottom: 20px;
    font-size: 1.4em;
    text-align: center;
}

#token-timer {
    position: fixed;
    bottom: 10px;
    right: 10px;
    background-color: rgba(0, 0, 0, 0.7);
    color: white;
    padding: 5px 10px;
    border-radius: 5px;
    font-family: 'Poppins', sans-serif;
    font-size: 14px;
    z-index: 1000;
}

/* Neue Klasse für den Vollbild-Container */
.full-screen-container {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.85); /* Dunkler, transparenter Hintergrund */
    display: flex;
    justify-content: center; /* Horizontale Zentrierung */
    align-items: center; /* Vertikale Zentrierung */
    padding: 20px;
    box-sizing: border-box;
    z-index: 100;
    opacity: 0; /* Startet transparent */
    transition: opacity 0.5s ease-in-out; /* NEU: Fügt einen sanften Übergang hinzu */
}

/* NEU: Klasse für das Sichtbarwerden */
.full-screen-container.fade-in-visible {
    opacity: 1;
}

#genre-preselection-content {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    height: 95%; /* 95% des Eltern-Containers für Abstand oben und unten */
    width: 100%;
    width: 90%; /* NEU: Ändert die Breite auf 90% für einen Rand */
}

#preselection-title {
    color: var(--white);
    text-align: center;
    font-size: 2em;
    font-family: 'Bebas Neue', sans-serif;
    letter-spacing: 0.1em;
    margin-bottom: 20px;
}

#all-genres-scrollbox {
    flex-grow: 1; /* Nimmt den restlichen vertikalen Platz ein */
    overflow-y: auto; /* Aktiviert das Scrollen bei Bedarf */
    padding: 10px;
    border-radius: 10px;
    background-color: rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(5px);
    -webkit-backdrop-filter: blur(5px);
    margin: 20px 0;
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 15px;
}

#preselection-start-button {
    font-size: 1.5em;
    padding: 15px 30px;
    margin-top: 20px;
    width: 100%;
    max-width: 400px;
    align-self: center; /* Zentriert den Button horizontal */
    border: 2px solid var(--white);
    background-color: rgba(255, 255, 255, 0.1);
    color: var(--white);
    transition: all 0.3s ease;
    width: 100%; /* Stellt sicher, dass der Button die volle Breite des Eltern-Containers einnimmt */
    max-width: none; /* Entfernt die maximale Breite, um die volle Breite zu nutzen */
}

#preselection-start-button:hover:not(.disabled) {
    background-color: var(--white);
    color: var(--black);
}

/* Stil für den deaktivierten Button */
#preselection-start-button.disabled {
    opacity: 0.5;
    cursor: not-allowed;
    transform: scale(1);
    box-shadow: none;
}

#ios-player-button {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 1000; /* Stellt sicher, dass der Button über anderen Elementen liegt */
    padding: 20px 40px;
    font-size: 1.2em;
    font-weight: bold;
    color: var(--black);
    background-color: var(--white);
    border: 2px solid var(--black);
    border-radius: 10px;
    cursor: pointer;
    text-transform: uppercase;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);
    transition: all 0.3s ease;
}

#ios-player-button:hover {
    background-color: var(--secondary-color);
    border-color: var(--secondary-color);
    color: var(--white);
}

/* Versteckt den Button, wenn die 'hidden' Klasse aktiv ist */
#ios-player-button.hidden {
    display: none;
}
