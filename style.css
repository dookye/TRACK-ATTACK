body {
    margin: 0;
    overflow: hidden; /* Verhindert Scrollbalken */
    background-color: black;
    color: white;
    font-family: Arial, sans-serif;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh; /* Nimmt die gesamte Viewport-Höhe ein */
    width: 100vw; /* Nimmt die gesamte Viewport-Breite ein */
}

/* Versteckte Elemente */
.hidden {
    display: none !important;
}

/* Sichtbare Elemente */
.visible {
    display: flex !important; /* Wichtig: Sorgt dafür, dass es display: none überschreibt */
}

/* Game Container - Immer sichtbar zu Beginn */
.game-container {
    position: relative;
    width: 100%;
    height: 100%;
    display: flex; /* Macht den Container flexibel */
    flex-direction: column; /* Elemente untereinander */
    justify-content: center; /* Zentriert vertikal */
    align-items: center; /* Zentriert horizontal */
    background-color: black;
    color: white;
    text-align: center;
    transition: opacity 1s ease-in-out;
    opacity: 1; /* Standardmäßig sichtbar */
}

/* Initial Click Blocker - Nur für Overlay-Nachrichten */
#initial-click-blocker {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.8);
    z-index: 1000;
    display: none; /* Standardmäßig versteckt */
    justify-content: center;
    align-items: center;
    color: white;
    font-size: 1.2em;
    text-align: center;
    cursor: pointer;
}

/* Overlay Nachrichten (Orientierung, Fullscreen) */
.overlay-message {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.9); /* Dunkler als der Blocker */
    z-index: 1010; /* Über dem Blocker */
    display: flex;
    justify-content: center;
    align-items: center;
    color: white;
    font-size: 1.5em;
    text-align: center;
    cursor: pointer;
    padding: 20px;
    box-sizing: border-box;
    transition: opacity 0.3s ease-in-out;
}

/* Spotify Login Box */
.spotify-box {
    background-color: #1a1a1a;
    padding: 30px;
    border-radius: 10px;
    box-shadow: 0 0 15px rgba(0, 0, 0, 0.5);
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 20px;
    max-width: 300px;
    width: 90%;
    margin: auto; /* Zentriert die Box */
}

#login-hint {
    margin-bottom: 0px;
    font-size: 0.9em;
    color: #bbb;
}

.spotify-button {
    background-color: #1DB954;
    color: white;
    border: none;
    border-radius: 25px;
    padding: 12px 25px;
    font-size: 1.1em;
    font-weight: bold;
    cursor: pointer;
    display: flex;
    align-items: center;
    gap: 10px;
    transition: background-color 0.3s ease;
}

.spotify-button:hover {
    background-color: #1ed760;
}

.spotify-icon {
    width: 24px;
    height: 24px;
}

/* Logo Container - Anfangs versteckt */
#logo-container {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: 100%;
    position: relative; /* Beibehalten für absolut positioniertes initial-hidden Kind */
    overflow: hidden; /* Beibehalten */
}

/* --- Animationen für das Logo --- */

/* Initialer Zustand für das Logo, wenn es noch nicht sichtbar ist und reinfallen soll */
#logo-container.initial-hidden {
    /* POSITION DER ANIMATION BEIM START (0% der Animation) */
    /*
     * 'translate(-50%, -150vh)' steuert die Startposition.
     * - Der erste Wert (-50%) verschiebt das Element horizontal um die Hälfte seiner EIGENEN Breite nach links.
     * In Kombination mit 'left: 50%;' (unten) zentriert das den Startpunkt perfekt horizontal.
     * Dieser Wert sollte für eine mittige Bewegung IMMER -50% bleiben.
     * - Der zweite Wert (-150vh) verschiebt das Element vertikal nach oben.
     * 'vh' steht für "viewport height" (Höhe des sichtbaren Browserbereichs).
     * -100vh würde es genau an den oberen Rand schieben, -150vh bedeutet 150% der Viewporthöhe nach oben.
     * Experimentiere hier mit größeren negativen Werten (-200vh, -300vh), um es von weiter oben kommen zu lassen.
     * Verändere diesen Wert, um zu beeinflussen, wie weit oben die Animation beginnt.
     */
    transform: translate(-50%, -150vh) scale(3); 
    opacity: 0;

    /* DIESE EIGENSCHAFTEN SIND ENTSCHEIDEND FÜR DIE HORIZONTALE ZENTRIERUNG DES STARTPUNKTS */
    position: absolute; /* Wichtig: Ermöglicht die Verwendung von top/left und translate */
    left: 50%;          /* Setzt den linken Rand des Elements in die Mitte des Elternelements */
    top: 0;             /* Setzt den oberen Rand des Elements an den oberen Rand des Elternelements */
    width: 100%;
    height: 100%;
}

/* Animation für das Reinfallen (Skalierung, Position, Transparenz) */
@keyframes fall-in {
    0% {
        /* Startpunkt der Animation (muss mit initial-hidden übereinstimmen) */
        /* Behalte '-50%' für die horizontale Zentrierung bei. */
        /* Verändere '-150vh', um den Startpunkt der fallenden Bewegung anzupassen. */
        transform: translate(-50%, -150vh) scale(3); 
        opacity: 0;
    }
    60% { 
        /* ZWISCHENPUNKT: Kurz vor dem Aufprall */
        /*
         * '-50%' hält die horizontale Zentrierung.
         * '0px' ist die vertikale Position relativ zur initialen 'top: 0;'.
         * Hier bleibt das Logo auf der "normalen" Y-Achse, bereit für den Bounce.
         */
        transform: translate(-50%, 0px) scale(1.1); /* An Zielposition, etwas größer für den "Pop" */
        opacity: 1;
    }
    80% { 
        /* ZWISCHENPUNKT: Beim leichten "Abprallen" nach oben */
        /*
         * '-50%' hält die horizontale Zentrierung.
         * '-20px' bewegt das Logo leicht nach oben (negativer Wert) über seine finale Ruheposition.
         * Je größer der negative Wert, desto höher "federt" es.
         */
        transform: translate(-50%, -20px) scale(0.95); /* Leicht nach oben ziehen, etwas kleiner */
        opacity: 1;
    }
    100% { 
        /* ENDPUNKT der Animation: Finale Position */
        /*
         * '-50%' hält die horizontale Zentrierung.
         * '0' ist die finale vertikale Ruheposition.
         * Hier soll das Logo genau da sein, wo es am Ende sichtbar bleiben soll.
         */
        transform: translate(-50%, 0) scale(1); /* An Endposition, normale Größe */
        opacity: 1;
    }
}

#game-logo {
    width: 60vmin; /* Responsive Größe basierend auf der kleineren Dimension des Viewports */
    height: auto;
    cursor: pointer;
    max-width: 500px; /* Maximale Größe für Desktop */
    /* ENTFÄLLE ODER ÄNDERE DIESE ZEILE: */
    /* transition: transform 0.3s ease-out, filter 0.3s ease-out; */ 
    
    /* NEU: Nur 'filter' als Transition beibehalten, wenn es für andere Effekte genutzt wird */
    transition: filter 0.3s ease-out; /* Hält nur die Transition für 'filter' */
}

/* Aktiver Zustand des Logos */
.active-logo {
    filter: brightness(100%);
}

/* Inaktiver Zustand des Logos */
.inactive-logo {
    filter: brightness(50%); /* Leicht abgedunkelt */
}

/* Bestehende @keyframes logo-click-bounce (oder umbenannt zu press-down) */
@keyframes press-down-bounce {
    0% {
        transform: scale(1); /* Normale Größe */
    }
    50% {
        transform: scale(0.9); /* Beim "Drücken" kleiner werden */
    }
    100% {
        transform: scale(1); /* Wieder normale Größe beim "Loslassen" */
    }
}

/* Die Klasse, die beim Klick hinzugefügt wird */
.logo-bounce { /* Behalten wir den Namen bei, aber die Animation ist neu */
    animation: press-down-bounce 0.3s ease-out; /* Schneller und knackiger */
}

.logo-bounce {
    animation: logo-click-bounce 0.5s ease-out;
}

/* Media Queries für Orientierung und Desktop */
@media (orientation: portrait) {
    /* Nichts spezifisches hier, da Orientierungs-Message dies übernimmt */
}

@media (min-width: 768px) {
    /* Anpassungen für größere Bildschirme / Desktop */
    .spotify-box {
        padding: 40px;
        max-width: 400px;
    }
    .spotify-button {
        padding: 15px 30px;
        font-size: 1.2em;
    }
    #game-logo {
        width: 40vmin;
        max-width: 400px;
    }
}
