/* Globale Entfernung des Tap-Highlights und der Outline */
* {
    -webkit-tap-highlight-color: transparent; /* Für WebKit-Browser (iOS Safari, Android Chrome) */
    outline: none; /* Entfernt den Fokus-Rahmen */
}

/* Optional: Spezifisch für Buttons, falls das globale * nicht ausreicht oder unerwünschte Nebeneffekte hat */
button, .genre-button, .dice-option, #login-button, #logo-button, #reveal-button, #random-dice-button {
    -webkit-tap-highlight-color: transparent;
    outline: none;
}

/* Genereller Stil für interaktive Buttons für den Pulldown-Effekt */
.genre-button,
#reveal-button, /* AUFLÖSEN-Button */
#correct-button, /* RICHTIG-Button */
#wrong-button, /* FALSCH-Button */
.dice-option, /* Die Würfel-Bilder */
#random-dice-button /* Random-Würfel-Button */
{
    transition: transform 0.06s ease-out; /* Kurze, sanfte Animation für den Klick-Effekt */
    cursor: pointer; /* Zeigt an, dass das Element klickbar ist */
}

/* Der eigentliche Pulldown-Effekt beim Klicken */
.genre-button:active,
#reveal-button:active,
#correct-button:active,
#wrong-button:active,
.dice-option:active,
#random-dice-button:active
{
    transform: scale(0.95); /* Macht den Button 5% kleiner beim Klicken */
}

/* --- NEU: Globale Klasse für inaktive Buttons --- */
/* Diese Klasse ersetzt frühere 'no-interaction' für einzelne Buttons und bietet visuelles Feedback */
.button-inactive {
    pointer-events: none; /* Blockiert Mausklicks */
    opacity: 0.5 !important; /* Leicht abgedunkelt - !important um spezifischere Opazitäten zu überschreiben */
    filter: blur(2px); /* Leicht verschwommen */
    transition: opacity 0.3s ease, filter 0.3s ease; /* Sanfter Übergang */
    cursor: default !important; /* Zeiger auf Standard setzen */
}

/* Globale Klasse für containerweite Interaktionssperre (wenn der gesamte Screen blockiert werden soll) */
/* Diese wird auf #app-container oder .game-screen angewendet */
.no-interaction {
    pointer-events: none;
}


/* Grundlegende Stile & Variablen */
:root {
    --player1-color: #007bff; /* Blau */
    --player2-color: #e83e8c; /* Pink */
    --black: #000;
    --white: #fff;
    --transition-speed: 0.8s;
}

/* Phase 1.1: Body & Seiten-Setup */
body, html {
    margin: 0;
    padding: 0;
    width: 100%;
    height: 100%;
    overflow: hidden;
    font-family: Arial, Helvetica, sans-serif;
    background-color: var(--black);
    color: var(--white);
    display: flex;
    justify-content: center;
    align-items: center;
    text-align: center;
}

#app-container {
    width: 100%;
    height: 100%;
    position: relative;
    transition: background-color var(--transition-speed) ease-in-out;
}

.screen {
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    position: absolute;
    top: 0;
    left: 0;
}

.hidden {
    display: none !important;
}

/* Overlay für Hochformat & Vollbild */
.overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background: var(--black);
    z-index: 100;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 1.5em;
}

#fullscreen-screen {
    cursor: pointer;
    font-size: 2em;
}

/* Stil für das Logo auf dem Login-Screen */
#login-logo {
    width: 250px; /* Passe die Breite an deine Bedürfnisse an */
    height: auto;
    margin-bottom: 20px; /* Abstand zum Text darunter */
}

/* Login-Button (Phase 1.1) */
#login-button {
    background-color: #1DB954;
    color: var(--white);
    border: none;
    padding: 15px 30px;
    border-radius: 50px;
    font-size: 1em;
    font-weight: bold;
    cursor: pointer;
    display: flex;
    align-items: center;
    gap: 15px;
    margin-top: 20px;
}
#login-button img {
    height: 24px;
}

/* Logo-Button & Animationen (Phase 1.4 & 2.1) */
#logo-button {
    width: 200px;
    height: auto;
    cursor: pointer;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 10;
}

.initial-fly-in {
    animation: fly-in 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards,
               bounce-end 0.3s 0.4s ease-out forwards;
}

@keyframes fly-in {
    0% {
        transform: translate(-50%, -50%) scale(14);
        opacity: 0;
    }
    100% {
        transform: translate(-50%, -50%) scale(1);
        opacity: 1;
    }
}

.bounce {
    animation: bounce 0.3s ease;
}

@keyframes bounce {
    0%, 100% { transform: translate(-50%, -50%) scale(1); }
    50% { transform: translate(-50%, -50%) scale(1.1); }
}

@keyframes bounce-end {
    0%, 100% { transform: translate(-50%, -50%) scale(1); }
    50% { transform: translate(-50%, -50%) scale(1.1); }
}

/* #logo-button.inactive wird durch .button-inactive ersetzt */


/* Würfel Container */
#dice-container {
    display: flex;
    flex-direction: column; /* Für vertikale Anordnung */
    justify-content: center;
    align-items: center;
    gap: 20px; /* Abstand zwischen Animation, Button und Auswahl */
}

/* .random-dice:hover ist nicht mehr direkt genutzt, da #random-dice-button img verwendet wird */

/* NEU: Styling für den Random-Würfel-Button */
#random-dice-button {
    background: none;
    border: none;
    padding: 0;
    cursor: pointer;
    position: relative; /* Für die Positionierung der Icons */
    z-index: 5; /* Über den Würfeln, aber unter dem Animation */
    margin-bottom: 20px; /* Abstand zu den Würfel-Optionen */
}

#random-dice-button img {
    width: 100px; /* Größe des Random-Würfel-Icons */
    height: auto;
    display: block; /* Entfernt zusätzlichen Platz unter dem Bild */
}

/* Würfel Auswahl (Die Würfel-Buttons selbst) */
#dice-selection {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 30px; /* ändert den Abstand zwischen den Würfeln */
}

.dice-option {
    width: 100px;
    height: auto;
    cursor: pointer;
    transition: transform 0.1s;
    position: relative; /* Für zukünftige Animationen/Positionierung */
}

#dice-animation {
    width: 250px;
}

.dice-option:hover:not(.button-inactive) { /* Sicherstellen, dass Hover nur auf aktiven Buttons wirkt */
    transform: scale(1.1);
}

/* NEU: Klasse für den ausgewählten Würfel, der zoomt */
/* Die Animation heißt jetzt "zoomAndFadeOut" für Konsistenz */
.dice-selected-zoom {
    position: absolute; /* Muss absolut sein, um mittig zu sein und zu zoomen */
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%) scale(2); /* Starker Zoom */
    z-index: 50; /* Über allem anderen */
    /* Transition wird durch die Animation überschrieben, daher hier nicht nötig */
    animation: zoomAndFadeOut 1.5s forwards; /* Animation für 1.5 Sekunden */
}

/* Genre Container (Phase 3) */
#genre-container {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 20px; /* Abstand zwischen den Genre-Buttons */
    flex-wrap: wrap; /* Lässt die Elemente in die nächste Zeile umbrechen */
    max-width: 80%; /* Optional: Begrenze die Breite des Containers, damit der Umbruch früher erfolgt */
}

.genre-button {
    padding: 20px 30px;
    font-size: 1.2em;
    cursor: pointer;
    border: 2px solid var(--white);
    background: transparent;
    color: var(--white);
    transition: background-color 0.3s, color 0.3s;
    border-radius: 10px;
}

.genre-button:hover:not(.button-inactive) { /* Sicherstellen, dass Hover nur auf aktiven Buttons wirkt */
    background-color: var(--white);
    color: var(--black);
}
/* .genre-button:disabled wird durch .button-inactive ersetzt und ist nicht mehr direkt nötig */

.random-blink {
    animation: blink 0.2s infinite alternate; /* Blinkt 0.2s, unendlich, hin und her */
}

@keyframes blink {
    from { opacity: 1 !important; } /* Wichtig: !important hinzugefügt */
    to { opacity: 0.4 !important; }  /* Wichtig: !important hinzugefügt */
}

/* Animation für ausgewählte Genre-Buttons */
.genre-selected-zoom {
    animation: zoomAndFadeOut 1.5s forwards ease-out;
}

/* Gemeinsame Zoom-Animation für Würfel und Genres */
@keyframes zoomAndFadeOut {
    0% {
        transform: translate(-50%, -50%) scale(1);
        opacity: 1;
    }
    50% {
        transform: translate(-50%, -50%) scale(1.3);
        opacity: 1;
    }
    100% {
        transform: translate(-50%, -50%) scale(0);
        opacity: 0;
    }
}

/* Klasse für deaktivierte Genre-Buttons bei Würfel 7 (visuelles Feedback zusätzlich zu .button-inactive) */
.genre-button.disabled-genre {
    border-color: grey; /* Nur visueller Unterschied, Interaktion regelt .button-inactive */
    background-color: #3a3a5a;
    /* cursor: not-allowed; und pointer-events: none; sind in .button-inactive enthalten */
}


/* Rate-Bildschirm & Auflösung (Phase 4) */
#reveal-button {
    position: absolute;
    bottom: 5%;
    padding: 15px 40px;
    font-size: 1.3em;
    background-color: #1DB954;
    color: white;
    border: none;
    border-radius: 50px;
    cursor: pointer;
}

#reveal-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 30px;
}

#track-info {
    display: flex;
    align-items: center;
    gap: 20px;
    background: rgba(0,0,0,0.5);
    padding: 20px;
    border-radius: 10px;
}
#album-cover {
    width: 150px;
    height: 150px;
}
#track-title {
    font-size: 2em;
    font-weight: bold;
    margin: 0;
}
#track-artist {
    font-size: 1.2em;
    margin: 0;
}

#feedback-buttons button {
    padding: 15px 30px;
    font-size: 1.2em;
    margin: 0 10px;
    border-radius: 30px;
    border: none;
    cursor: pointer;
    min-width: 150px;
}
#correct-button { background-color: #28a745; color: white; }
#wrong-button { background-color: #dc3545; color: white; }

/* Punkte-Bildschirm (Phase 5) */
#score-screen {
    flex-direction: row;
    background: linear-gradient(90deg, var(--player1-color) 0%, var(--player1-color) 50%, var(--player2-color) 50%, var(--player2-color) 100%);
}
#player1-score-display, #player2-score-display {
    width: 50%;
    font-size: 15vw;
    font-weight: bold;
    color: white;
    text-shadow: 2px 2px 10px rgba(0,0,0,0.5);
    opacity: 1;
    transition: opacity 1s ease-in-out;
}

/* Speed-Round (Phase 6) */
/* Styling für das Wort "SPEED-ROUND" */
#speed-round-text-display {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size: 9em;
    font-weight: bold;
    color: var(--white);
    text-shadow: 0 0 10px rgba(255, 255, 255, 0.3);
    z-index: 20;
    animation: zoom-fade-in 4s forwards;
    white-space: nowrap;
}

/* --- Media Query für mobile Geräte --- */
@media screen and (max-width: 768px) {
    #speed-round-text-display {
        font-size: 8em;
        line-height: 1.2;
        padding: 0 10px;
        box-sizing: border-box;
    }
}

/* Countdown-Anzeige */
#countdown-display {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size: 20vw;
    font-weight: bold;
    color: var(--white);
    text-shadow: 0 0 20px rgba(255, 255, 255, 0.5);
    z-index: 30;
}

/* Klasse für die Animation, die wir per JS hinzufügen und entfernen */
.countdown-animated {
    animation: countdown-pulse 1s ease-in-out forwards;
}

/* Angepasste Keyframes für den Countdown-Puls */
@keyframes countdown-pulse {
    0% { transform: translate(-50%, -50%) scale(0.8); opacity: 0; }
    20% { transform: translate(-50%, -50%) scale(1.2); opacity: 1; }
    80% { transform: translate(-50%, -50%) scale(1); opacity: 1; }
    100% { transform: translate(-50%, -50%) scale(1); opacity: 0; }
}

@keyframes zoom-fade-in {
    0% { transform: translate(-50%, -50%) scale(0.5); opacity: 0; }
    20% { transform: translate(-50%, -50%) scale(1.1); opacity: 1; }
    80% { transform: translate(-50%, -50%) scale(1); opacity: 1; }
    100% { transform: translate(-50%, -50%) scale(1); opacity: 0; }
}

@keyframes points-fade-in-zoom {
    0% {
        opacity: 0;
        transform: translate(-50%, -50%) scale(0.5);
    }
    20% {
        opacity: 1;
        transform: translate(-50%, -50%) scale(1.2);
    }
    100% {
        opacity: 1;
        transform: translate(-50%, -50%) scale(1);
    }
}

.points-pop-in {
    animation: points-fade-in-zoom 1s ease-out forwards;
}

@keyframes flyToCornerPlayer1 {
    0% {
        opacity: 1;
        transform: translate(-50%, -50%) scale(1);
        top: 50%;
        left: 25%;
    }
    100% {
        opacity: 0;
        transform: translate(-50%, -50%) scale(0.3);
        top: 3%;
        left: 3%;
    }
}

@keyframes flyToCornerPlayer2 {
    0% {
        opacity: 1;
        transform: translate(-50%, -50%) scale(1);
        top: 50%;
        left: 75%;
    }
    100% {
        opacity: 0;
        transform: translate(-50%, -50%) scale(0.3);
        top: 3%;
        left: 97%;
    }
}

.fly-to-corner-player1 {
    animation: flyToCornerPlayer1 0.4s ease-out forwards;
}

.fly-to-corner-player2 {
    animation: flyToCornerPlayer2 0.4s ease-out forwards;
}
